// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "K.Apiwattanawong",
            "url": "http://www.swagger.io/support",
            "email": "k.apiwattanawong@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/margin-call": {
            "post": {
                "description": "send warning margin call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Email"
                ],
                "summary": "Send Warning Margin Call",
                "parameters": [
                    {
                        "description": "request body to send warning margin call",
                        "name": "SendMarginCall",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/email.SendMarginCallRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/otp": {
            "post": {
                "description": "send otp to email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Email"
                ],
                "summary": "Send OTP",
                "parameters": [
                    {
                        "description": "request body to send otp",
                        "name": "SendOTP",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/email.SendOtpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/verification": {
            "post": {
                "description": "send token to verify email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Email"
                ],
                "summary": "Send Verify Email",
                "parameters": [
                    {
                        "description": "request body to send verify email",
                        "name": "SendVerifyEmail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/email.SendVerifyEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "email.BodyMarginCallRequest": {
            "type": "object",
            "properties": {
                "marginCallCount": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "trust momo"
                }
            }
        },
        "email.BodySendOtpRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "trust"
                },
                "otp": {
                    "type": "string",
                    "example": "999999"
                },
                "refNo": {
                    "type": "string",
                    "example": "tog2C7"
                }
            }
        },
        "email.BodySendVerifyEmailRequest": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string",
                    "example": "www.lending.com/WERaOJOsfX"
                },
                "name": {
                    "type": "string",
                    "example": "trust momo"
                }
            }
        },
        "email.SendMarginCallRequest": {
            "type": "object",
            "properties": {
                "auth": {
                    "type": "boolean",
                    "example": true
                },
                "body": {
                    "$ref": "#/definitions/email.BodyMarginCallRequest"
                },
                "from": {
                    "type": "string",
                    "example": "icfin999@gmail.com"
                },
                "subject": {
                    "type": "string",
                    "example": "margin call"
                },
                "template": {
                    "type": "string",
                    "example": "margin-call.html"
                },
                "to": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "yoisak09446@gmail.com"
                    ]
                }
            }
        },
        "email.SendOtpRequest": {
            "type": "object",
            "properties": {
                "auth": {
                    "type": "boolean",
                    "example": true
                },
                "body": {
                    "$ref": "#/definitions/email.BodySendOtpRequest"
                },
                "from": {
                    "type": "string",
                    "example": "icfin999@gmail.com"
                },
                "subject": {
                    "type": "string",
                    "example": "otp request"
                },
                "template": {
                    "type": "string",
                    "example": "otp.html"
                },
                "to": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "yoisak09446@gmail.com"
                    ]
                }
            }
        },
        "email.SendVerifyEmailRequest": {
            "type": "object",
            "properties": {
                "auth": {
                    "type": "boolean",
                    "example": true
                },
                "body": {
                    "$ref": "#/definitions/email.BodySendVerifyEmailRequest"
                },
                "from": {
                    "type": "string",
                    "example": "icfin999@gmail.com"
                },
                "subject": {
                    "type": "string",
                    "example": "otp request"
                },
                "template": {
                    "type": "string",
                    "example": "otp.html"
                },
                "to": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "yoisak09446@gmail.com"
                    ]
                }
            }
        },
        "response.ErrResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "description": {
                    "type": "string",
                    "example": "Please contact administrator for more information."
                },
                "error": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "example": "Cannot register public key."
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "object"
                },
                "title": {
                    "type": "string",
                    "example": "Register key success."
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:9090",
	BasePath:    "/email",
	Schemes:     []string{"http", "https"},
	Title:       "Mail API Services",
	Description: "Mail API for ICFIN company.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
